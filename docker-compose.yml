services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mediapp-frontend
    ports:
      - "${FRONTEND_PORT}:80"
    networks:
      - mediapp-network
    environment:
      - NODE_ENV=production

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: mediapp-backend
    ports:
      - "${BACKEND_PORT}:8080"
    networks:
      - mediapp-network
    depends_on:
      - database
    environment:
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=mediapp_db
      - DB_USER=mediapp_user
      - DB_PASSWORD=mediapp_password_2024
      - ENV=production

  database:
    image: postgres:16-alpine
    container_name: mediapp-database
    environment:
      POSTGRES_USER: mediapp_user
      POSTGRES_PASSWORD: mediapp_password_2024
      POSTGRES_DB: mediapp_db
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data  # ← Corregido aquí
    networks:
      - mediapp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mediapp_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  sonarqube:
    image: sonarqube:community
    container_name: mediapp-sonarqube
    depends_on:
      - database
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://database:5432/mediapp_db
      - SONAR_JDBC_USERNAME=mediapp_user
      - SONAR_JDBC_PASSWORD=mediapp_password_2024
    ports:
      - "9000:9000"
    networks:
      - mediapp-network

volumes:
  db_data:  # ← Corregido aquí

networks:
  mediapp-network:
    driver: bridge